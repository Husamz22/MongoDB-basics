show dbs
use dbs 
db.createCollection("students") 
db.dropDatabase()

db.students.insertOne({name:"Spongebob", age:30, gpa: 3.2})

db.students.insertMany([{name:"Patrick", age:38, gpa: 1.5},  
                               {name:"Sandy", age:27, gpa: 4.0},
                               {name:"Gary", age:18, gpa: 2.5}])



db.students.insertOne(
{
  name: "Larry",
  age: 32,
  gpa: 2.8,
  fullTime: false,
  registerDate: new Date(), 
  graduationDate: null,
  courses:["Biology", "Chemistry", "Calculus"],
  address:{street:"123 Fake St.", 
                  city:"Bikini Bottom", 
                  zip: 12345} 
})


db.students.find()
db.students.find().sort({name: 1})
db.students.find().sort({name: -1})
db.students.find().sort({gpa: 1})
db.students.find().sort({gpa: -1})
db.students.find().limit(1)
db.students.find().limit(3)
db.students.find().sort({gpa: -1}).limit(1)
db.students.find().sort({gpa: -1}).limit(3)


db.students.find({name: "Spongebob"})
db.students.find({gpa: 4.0})
db.students.find({fullTime: false})
db.students.find({}, {name: true})
db.students.find({}, {_id: false, name: true})
db.students.find({}, {_id: false, name: true, gpa: true})
db.students.find({name:"Spongebob"}, {_id: false, name: true, gpa: true})


db.students.updateOne({name:"Spongebob"}, {$set:{fullTime:true}})
db.students.updateOne({_id: ObjectId("642c0e70985f18e1bcf24d35")}, {$set:{fullTime:false}})
db.students.updateOne({_id: ObjectId("642c0e70985f18e1bcf24d35")}, {$unset:{fullTime:""}})
db.students.updateMany({}, {$set:{fullTime:false}})
db.students.updateOne({name:"Gary"}, {$unset:{fullTime:""}})
db.students.updateOne({name:"Sandy"}, {$unset:{fullTime:""}})
db.students.updateMany({fullTime:{$exists:false}}, {$set:{fullTime:true}})



db.students.deleteOne({name:"Larry"})
db.students.deleteMany({fullTime:false})
db.students.deleteMany({registerDate:{$exists:false}})


db.students.find({name:{$ne:"Spongebob"}})
db.students.find({age:{$lt:20}})
db.students.find({age:{$lte:27}})
db.students.find({age:{$gt:27}})
db.students.find({age:{$gte:27}})
db.students.find({gpa:{$gte:3, $lte:4}})
db.students.find({name:{$in: ["Spongebob", "Patrick", "Sandy"]}}) 
db.students.find({name:{$nin: ["Spongebob", "Patrick", "Sandy"]}})


db.students.find({$and: [{fullTime:true}, {age:{$lte:22}}]})
db.students.find({$or: [{fullTime:true}, {age:{$lte:22}}]})
db.students.find({$nor: [{fullTime:true}, {age:{$lte:22}}]})
db.students.find({age:{$not:{$gte:30}}})


db.students.createIndex({name: 1})
db.students.getIndexes()
db.students.dropIndex("name_1")

db.createCollection("teachers", {capped : true , size : 1000 * 1024, max : 100}, {autoIndexId:false})

capped = Enables a capped collection. Oldest entries are overwritten when the collection reaches its max size.
size = specifies the maximum size in bytes (x * y bytes)
max = maximum number of documents allowed
autoIndexId = Creates an index on _id field
